# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
name: airflow-teradata-system-test-dashboard
on:
  push:
    branches:
      - teradata_main
  workflow_dispatch:
  schedule:
  - cron: "0 6 * * *"
permissions:
  contents: write
  pages: write
  id-token: write
jobs:
  teradata-systemtest:
    name: "Manage Teradata Provider System Tests Dashboard"
    runs-on: "ubuntu-22.04"
    steps:
      - name: Cleanup repo
        run: docker run -v "${GITHUB_WORKSPACE}:/workspace" -u 0:0 bash -c "rm -rf /workspace/*"
      - name: "Checkout Teradata Airflow Source Code"
        uses: actions/checkout@v4
        with:
          ref: ${{ vars.TERADATA_BRANCH }}
          persist-credentials: false
      - name: "Install Python"
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: 'pip'
      - name: "Branch Name"
        run: echo running on branch ${{ vars.TERADATA_BRANCH }}
      - name: "Checkout ClearScape Scripts and Report Generation supported files"
        if: ${{vars.TERADATA_BRANCH != 'teradata_main'}}
        run: |
            git fetch
            git checkout origin/teradata_main -- .github/workflows/scripts/createTestEnvironments.sh
            git checkout origin/teradata_main -- .github/workflows/scripts/deleteTestEnvironments.sh
            git checkout origin/teradata_main -- .github/workflows/system-tests-files/report_generate_index_html.py
            git checkout origin/teradata_main -- .github/workflows/system-tests-files/report_index_template.html
            git checkout origin/teradata_main -- .github/workflows/system-tests-files/report_parse_xml.py
            cp .github/workflows/system-tests-files/report_generate_index_html.py .
            cp .github/workflows/system-tests-files/report_index_template.html .
            cp .github/workflows/system-tests-files/report_parse_xml.py .
      - name: "Download System Test Log Report"
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: ci-teradata-systemtest-dashboard.yml
          name: airflow-system-test-report
          path: .
      - name: "Define CSAE env name"
        id: define-environment-name
        run: |
          PYTHON_VERSION=$(echo -n "$PYTHON_VERSION" | tr -d '.') # remove dots from version
          echo "env-name=airflow-ci-$PYTHON_VERSION-$(date +%s%N)" >> $GITHUB_OUTPUT
        env:
          PYTHON_VERSION: 3.8
      - name: "Create CSAE environment"
        id: create-csae-environment
        shell: bash
        run: |
          chmod 777 .github/workflows/scripts/createTestEnvironments.sh
          .github/workflows/scripts/createTestEnvironments.sh
        env:
          CSAE_TOKEN: ${{ secrets.CSAE_AIRFLOW_TOKEN }}
          CSAE_ENV_PASSWORD: ${{ secrets.CSAE_AIRFLOW_ENV_PASSWORD }}
          CSAE_ENV_NAME: ${{ steps.define-environment-name.outputs.env-name}}
      - name: "Install Airflow and Teradata Provider"
        run: |
              sudo apt install -y python3.10-venv python3-pip pipx
              pip install pytest time-machine pytest-asyncio pytest-md-report cryptography pytest-html tailer pandas jinja2
              pip install -e ".[devel,teradata]"
              airflow version
              export SYSTEM_TESTS_ENV_ID=teradatasystemtest
              export AIRFLOW_CONN_TERADATA_DEFAULT='teradata://${{ vars.CSAE_AIRFLOW_ENV_USERNAME }}:${{ secrets.CSAE_AIRFLOW_ENV_PASSWORD }}@${{ steps.create-csae-environment.outputs.teradata-server-name }}:/${{ vars.CSAE_AIRFLOW_ENV_DATABASE }}'
              export AIRFLOW_CONN_TERADATA_SSL_DEFAULT='teradata://${{ vars.CSAE_AIRFLOW_ENV_USERNAME }}:${{ secrets.CSAE_AIRFLOW_ENV_PASSWORD }}@${{ steps.create-csae-environment.outputs.teradata-server-name }}:/${{ vars.CSAE_AIRFLOW_ENV_DATABASE }}?sslmode=allow'
              export AIRFLOW_CONN_TERADATA_SP_CALL='teradata://${{ vars.CSAE_AIRFLOW_ENV_USERNAME }}:${{ secrets.CSAE_AIRFLOW_ENV_PASSWORD }}@${{ steps.create-csae-environment.outputs.teradata-server-name }}:/${{ vars.CSAE_AIRFLOW_ENV_DATABASE }}?tmode=TERA'
              pytest --system=teradata --junitxml=report_test.xml tests/system/providers/teradata
      - name: "Delete CSAE environment"
        if: always()
        run: |
          chmod 777 .github/workflows/scripts/deleteTestEnvironments.sh
          .github/workflows/scripts/deleteTestEnvironments.sh
        env:
          CSAE_TOKEN: ${{ secrets.CSAE_AIRFLOW_TOKEN }}
          CSAE_ENV_NAME: ${{ steps.define-environment-name.outputs.env-name}}
      - name: "Generate Teradata Airflow Provider System Tests Report"
        if: always()
        run:  |
              python report_parse_xml.py
              python report_generate_index_html.py
              mkdir teradata_report
              cp index.html teradata_report/index.html
      - run: echo Upload airflow teradata system test report
      - uses: actions/upload-artifact@v4
        with:
          name: airflow-system-test-report
          path: |
            reporttest.csv
      - name: "Build GITHUB Page for Teradata Airflow Provider System Tests Report"
        if: always()
        uses: actions/jekyll-build-pages@v1
        with:
         source: ./teradata_report
         destination: ./_site
      - name: "Upload Teradata Airflow Provider System Tests Report to GITHUB page"
        if: always()
        uses: actions/upload-pages-artifact@v2
      - name: "Publish Teradata Airflow Provider System Tests Report to GITHUB page"
        if: always()
        id: deployment
        uses: actions/deploy-pages@v2




